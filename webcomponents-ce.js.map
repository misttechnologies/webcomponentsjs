{"version":3,"sources":["entrypoints/webcomponents-ce-index.js","bower_components/custom-elements/src/Patch/Element.js","bower_components/custom-elements/src/CustomElementState.js","bower_components/custom-elements/src/Patch/Interface/ChildNode.js","bower_components/custom-elements/src/Patch/Node.js","bower_components/custom-elements/src/Patch/Document.js","bower_components/custom-elements/src/Patch/Interface/ParentNode.js","bower_components/custom-elements/src/Patch/HTMLElement.js","bower_components/custom-elements/src/CustomElementRegistry.js","bower_components/custom-elements/src/Deferred.js","bower_components/custom-elements/src/DocumentConstructionObserver.js","bower_components/custom-elements/src/CustomElementInternals.js","bower_components/custom-elements/src/Utilities.js","bower_components/custom-elements/src/Patch/Native.js","bower_components/custom-elements/src/AlreadyConstructedMarker.js","bower_components/custom-elements/src/custom-elements.js"],"names":["PatchElement","internals","patch_innerHTML","destination","baseDescriptor","Object","defineProperty","enumerable","configurable","get","set","htmlString","removedElements","undefined","isConnected","isConnected$$1","walkDeepDescendantElements","element","push","call","i","length","custom","__CE_state","disconnectedCallback","ownerDocument","__CE_hasRegistry","patchAndUpgradeTree","patchTree","patch_insertAdjacentElement","baseMethod","setPropertyUnchecked","where","wasConnected","insertedElement","disconnectTree","connectTree","Element_attachShadow","Element","prototype","init","__CE_shadowRoot","shadowRoot","console","warn","Element_innerHTML","HTMLElement_innerHTML","HTMLElement","rawDiv","Document_createElement","document","addPatch","Node_cloneNode","innerHTML","assignedValue","content","localName","childNodes","Node_removeChild","Node_appendChild","name","newValue","Element_setAttribute","oldValue","Element_getAttribute","attributeChangedCallback","namespace","Element_setAttributeNS","Element_getAttributeNS","Element_removeAttribute","Element_removeAttributeNS","HTMLElement_insertAdjacentElement","Element_insertAdjacentElement","PatchParentNode","prepend","Element_prepend","append","Element_append","PatchChildNode","before","Element_before","after","Element_after","replaceWith","Element_replaceWith","remove","Element_remove","builtIn","connectedBefore","nodes","filter","node","Node","apply","PatchNode","patch_textContent","nodeType","TEXT_NODE","removedNodes","firstChild","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","Node_insertBefore","nodeWasConnected","deep","clone","nodeToInsert","nodeToRemove","Node_replaceChild","nodeToInsertWasConnected","thisIsConnected","Node_textContent","parts","textContent","join","createTextNode","PatchDocument","Document","definition","localNameToDefinition","constructor","result","patch","Document_importNode","NS_HTML","Document_createElementNS","Document_prepend","Document_append","PatchHTMLElement","window","constructorToDefinition","Error","constructionStack","setPrototypeOf","__CE_definition","lastIndex","AlreadyConstructedMarker$1","CustomElementRegistry","_elementDefinitionIsRunning","_internals","_whenDefinedDeferred","Map","_flushCallback","this._flushCallback","fn","_flushPending","_unflushedLocalNames","_documentConstructionObserver","DocumentConstructionObserver","Deferred","_resolve","_value","_promise","Promise","resolve","doc","_document","_observer","readyState","MutationObserver","_handleMutations","bind","observe","childList","subtree","CustomElementInternals","_localNameToDefinition","_constructorToDefinition","_patches","_hasPatches","isValidCustomElementName","reserved","reservedTagList","has","validForm","test","nativeValue","current","__CE_isImportDocument","parentNode","ShadowRoot","host","nextSiblingOrAncestorSibling","root","start","nextSibling","callback","visitedImports","Set","ELEMENT_NODE","getAttribute","importNode","import","add","child","value","setDefinition","listener","__CE_patched","elements","connectedCallback","upgradeElement","gatherElements","addEventListener","__CE_documentLoadHandled","delete","pop","e","failed","observedAttributes","indexOf","disconnect","mutations","addedNodes","j","toPromise","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","_flush","shift","deferred","whenDefined","reject","prior","polyfillWrapFlushCallback","outer","inner","flush","createElement","createElementNS","cloneNode","appendChild","insertBefore","removeChild","replaceChild","getOwnPropertyDescriptor","setAttribute","removeAttribute","getAttributeNS","setAttributeNS","removeAttributeNS","AlreadyConstructedMarker","priorCustomElements","customElements"],"mappings":"A;;;;;;;;;;;;;;;;;aAAC,SAAS,EAAG,CCWEA,QAAA,EAAA,CAASC,CAAT,CAAoB,CAkBjCC,QAASA,EAAe,CAACC,CAAD,CAAcC,CAAd,CAA8B,CACpDC,MAAAC,eAAA,CAAsBH,CAAtB,CAAmC,WAAnC,CAAgD,CAC9CI,WAAYH,CAAAG,WADkC,CAE9CC,aAAc,CAAA,CAFgC,CAG9CC,IAAKL,CAAAK,IAHyC,CAI9CC,IAA4BA,QAAA,CAASC,CAAT,CAAqB,CAAA,IAAA,EAAA,IAAA,CAS3CC,EAAkBC,IAAAA,EARFC,EAAAC,CAAsB,IAAtBA,CASpB,GACEH,CACA,CADkB,EAClB,CAAAI,CAAA,CAAqC,IAArC,CAA2C,QAAA,CAAAC,CAAA,CAAW,CAChDA,CAAJ,GAAgB,CAAhB,EACEL,CAAAM,KAAA,CAAqBD,CAArB,CAFkD,CAAtD,CAFF,CASAb,EAAAM,IAAAS,KAAA,CAAwB,IAAxB,CAA8BR,CAA9B,CAEA,IAAIC,CAAJ,CACE,IAAK,IAAIQ,EAAI,CAAb,CAAgBA,CAAhB,CAAoBR,CAAAS,OAApB,CAA4CD,CAAA,EAA5C,CAAiD,CAC/C,IAAMH,EAAUL,CAAA,CAAgBQ,CAAhB,CCrDlBE,EDsDE,GAAIL,CAAAM,WAAJ,EACEtB,CAAAuB,qBAAA,CAA+BP,CAA/B,CAH6C,CAU9C,IAAAQ,cAAAC,iBAAL,CAGEzB,CAAA0B,oBAAA,CAA8B,IAA9B,CAHF,CACE1B,CAAA2B,UAAA,CAAoB,IAApB,CAIF,OAAOjB,EArCwC,CAJH,CAAhD,CADoD,CA4KtDkB,QAASA,EAA2B,CAAC1B,CAAD,CAAc2B,CAAd,CAA0B,CAC5DC,CAAA,CAA+B5B,CAA/B,CAA4C,uBAA5C,CAOE,QAAA,CAAS6B,CAAT,CAAgBf,CAAhB,CAAyB,CACvB,IAAMgB,EAAenB,CAAA,CAAsBG,CAAtB,CACfiB;CAAAA,CACHJ,CAAAX,KAAA,CAAgB,IAAhB,CAAsBa,CAAtB,CAA6Bf,CAA7B,CAECgB,EAAJ,EACEhC,CAAAkC,eAAA,CAAyBlB,CAAzB,CAGEH,EAAA,CAAsBoB,CAAtB,CAAJ,EACEjC,CAAAmC,YAAA,CAAsBnB,CAAtB,CAEF,OAAOiB,EAZgB,CAP3B,CAD4D,CA7L1DG,CAAJ,CACEN,CAAA,CAA+BO,OAAAC,UAA/B,CAAkD,cAAlD,CAME,QAAA,CAASC,CAAT,CAAe,CAGb,MADA,KAAAC,gBACA,CAFMC,CAEN,CAFmBL,CAAAlB,KAAA,CAAiC,IAAjC,CAAuCqB,CAAvC,CADN,CANjB,CADF,CAaEG,OAAAC,KAAA,CAAa,0DAAb,CAmDF,IAAIC,CAAJ,EAAgCA,CAAApC,IAAhC,CACEP,CAAA,CAAgBoC,OAAAC,UAAhB,CAAmCM,CAAnC,CADF,KAEO,IAAIC,CAAJ,EAAoCA,CAAArC,IAApC,CACLP,CAAA,CAAgB6C,WAAAR,UAAhB,CAAuCO,CAAvC,CADK,KAEA,CAGL,IAAME,EAASC,CAAA9B,KAAA,CAAmC+B,QAAnC,CAA6C,KAA7C,CAEfjD,EAAAkD,SAAA,CAAmB,QAAA,CAASlC,CAAT,CAAkB,CACnCf,CAAA,CAAgBe,CAAhB,CAAyB,CACvBV,WAAY,CAAA,CADW,CAEvBC,aAAc,CAAA,CAFS,CAMvBC,IAA4BA,QAAA,EAAW,CACrC,MAAO2C,EAAAjC,KAAA,CAA2B,IAA3B,CAAiC,CAAA,CAAjC,CAAAkC,UAD8B,CANhB,CAYvB3C,IAA4BA,QAAA,CAAS4C,CAAT,CAAwB,CAKlD,IAAMC,EAA6B,UAAnB,GAAA,IAAAC,UAAA;AAAsE,IAAtCD,QAAhC,CAAuF,IAGvG,KAFAP,CAAAK,UAEA,CAFmBC,CAEnB,CAAmC,CAAnC,CAAOC,CAAAE,WAAApC,OAAP,CAAA,CACEqC,CAAAvC,KAAA,CAA6BoC,CAA7B,CAAsCA,CAAAE,WAAA,CAAmB,CAAnB,CAAtC,CAEF,KAAA,CAAkC,CAAlC,CAAOT,CAAAS,WAAApC,OAAP,CAAA,CACEsC,CAAAxC,KAAA,CAA6BoC,CAA7B,CAAsCP,CAAAS,WAAA,CAAkB,CAAlB,CAAtC,CAZgD,CAZ7B,CAAzB,CADmC,CAArC,CALK,CAsCP1B,CAAA,CAA+BO,OAAAC,UAA/B,CAAkD,cAAlD,CAME,QAAA,CAASqB,CAAT,CAAeC,CAAf,CAAyB,CAEvB,GC1HIvC,CD0HJ,GAAI,IAAAC,WAAJ,CACE,MAAOuC,EAAA3C,KAAA,CAAiC,IAAjC,CAAuCyC,CAAvC,CAA6CC,CAA7C,CAGT,KAAME,EAAWC,CAAA7C,KAAA,CAAiC,IAAjC,CAAuCyC,CAAvC,CACjBE,EAAA3C,KAAA,CAAiC,IAAjC,CAAuCyC,CAAvC,CAA6CC,CAA7C,CACAA,EAAA,CAAWG,CAAA7C,KAAA,CAAiC,IAAjC,CAAuCyC,CAAvC,CACPG,EAAJ,GAAiBF,CAAjB,EACE5D,CAAAgE,yBAAA,CAAmC,IAAnC,CAAyCL,CAAzC,CAA+CG,CAA/C,CAAyDF,CAAzD,CAAmE,IAAnE,CAVqB,CAN3B,CAoBA9B,EAAA,CAA+BO,OAAAC,UAA/B,CAAkD,gBAAlD,CAOE,QAAA,CAAS2B,CAAT,CAAoBN,CAApB,CAA0BC,CAA1B,CAAoC,CAElC,GC/IIvC,CD+IJ,GAAI,IAAAC,WAAJ,CACE,MAAO4C,EAAAhD,KAAA,CAAmC,IAAnC,CAAyC+C,CAAzC,CAAoDN,CAApD,CAA0DC,CAA1D,CAGT,KAAME,EAAWK,CAAAjD,KAAA,CAAmC,IAAnC,CAAyC+C,CAAzC,CAAoDN,CAApD,CACjBO,EAAAhD,KAAA,CAAmC,IAAnC,CAAyC+C,CAAzC,CAAoDN,CAApD,CAA0DC,CAA1D,CACAA,EAAA,CAAWO,CAAAjD,KAAA,CAAmC,IAAnC;AAAyC+C,CAAzC,CAAoDN,CAApD,CACPG,EAAJ,GAAiBF,CAAjB,EACE5D,CAAAgE,yBAAA,CAAmC,IAAnC,CAAyCL,CAAzC,CAA+CG,CAA/C,CAAyDF,CAAzD,CAAmEK,CAAnE,CAVgC,CAPtC,CAqBAnC,EAAA,CAA+BO,OAAAC,UAA/B,CAAkD,iBAAlD,CAKE,QAAA,CAASqB,CAAT,CAAe,CAEb,GClKItC,CDkKJ,GAAI,IAAAC,WAAJ,CACE,MAAO8C,EAAAlD,KAAA,CAAoC,IAApC,CAA0CyC,CAA1C,CAGT,KAAMG,EAAWC,CAAA7C,KAAA,CAAiC,IAAjC,CAAuCyC,CAAvC,CACjBS,EAAAlD,KAAA,CAAoC,IAApC,CAA0CyC,CAA1C,CACiB,KAAjB,GAAIG,CAAJ,EACE9D,CAAAgE,yBAAA,CAAmC,IAAnC,CAAyCL,CAAzC,CAA+CG,CAA/C,CAAyD,IAAzD,CAA+D,IAA/D,CATW,CALjB,CAkBAhC,EAAA,CAA+BO,OAAAC,UAA/B,CAAkD,mBAAlD,CAME,QAAA,CAAS2B,CAAT,CAAoBN,CAApB,CAA0B,CAExB,GCrLItC,CDqLJ,GAAI,IAAAC,WAAJ,CACE,MAAO+C,EAAAnD,KAAA,CAAsC,IAAtC,CAA4C+C,CAA5C,CAAuDN,CAAvD,CAGT,KAAMG,EAAWK,CAAAjD,KAAA,CAAmC,IAAnC,CAAyC+C,CAAzC,CAAoDN,CAApD,CACjBU,EAAAnD,KAAA,CAAsC,IAAtC,CAA4C+C,CAA5C,CAAuDN,CAAvD,CAIA,KAAMC,EAAWO,CAAAjD,KAAA,CAAmC,IAAnC,CAAyC+C,CAAzC,CAAoDN,CAApD,CACbG,EAAJ,GAAiBF,CAAjB,EACE5D,CAAAgE,yBAAA,CAAmC,IAAnC,CAAyCL,CAAzC,CAA+CG,CAA/C,CAAyDF,CAAzD,CAAmEK,CAAnE,CAbsB,CAN5B,CAgDIK,EAAJ,CACE1C,CAAA,CAA4BkB,WAAAR,UAA5B,CAAmDgC,CAAnD,CADF,CAEWC,CAAJ,CACL3C,CAAA,CAA4BS,OAAAC,UAA5B;AAA+CiC,CAA/C,CADK,CAGL7B,OAAAC,KAAA,CAAa,mEAAb,CAIF6B,EAAA,CAAgBxE,CAAhB,CAA2BqC,OAAAC,UAA3B,CAA8C,CAC5CmC,QAASC,CADmC,CAE5CC,OAAQC,CAFoC,CAA9C,CAKAC,EAAA,CAAe7E,CAAf,CAA0BqC,OAAAC,UAA1B,CAA6C,CAC3CwC,OAAQC,CADmC,CAE3CC,MAAOC,CAFoC,CAG3CC,YAAaC,CAH8B,CAI3CC,OAAQC,CAJmC,CAA7C,CApOiC,CEOpBR,QAAA,EAAA,CAAS7E,CAAT,CAAoBE,CAApB,CAAiCoF,CAAjC,CAA0C,CAIvDpF,CAAA,OAAA,CAAwB,QAAA,CAAS,CAAT,CAAmB,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAEzBqF,EAAAA,CAFmCC,CAEaC,OAAA,CAAa,QAAA,CAAAC,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBC,KAAvB,EAA+B9E,CAAA,CAAsB6E,CAAtB,CAF0C,CAArB,CAKtDJ,EAAAR,OAAAc,MAAA,CAAqB,IAArB,CAPyCJ,CAOzC,CAEA,KAAK,IAAIrE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBoE,CAAAnE,OAApB,CAA4CD,CAAA,EAA5C,CACEnB,CAAAkC,eAAA,CAAyBqD,CAAA,CAAgBpE,CAAhB,CAAzB,CAGF,IAAIN,CAAA,CAAsB,IAAtB,CAAJ,CACE,IAASM,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAduCqE,CAcnBpE,OAApB,CAAkCD,CAAA,EAAlC,CACQuE,CACN,CAhBqCF,CAexB,CAAMrE,CAAN,CACb,CAAIuE,CAAJ,WAAoBrD,QAApB,EACErC,CAAAmC,YAAA,CAAsBuD,CAAtB,CAjBmC,CA0B3CxF;CAAA,MAAA,CAAuB,QAAA,CAAS,CAAT,CAAmB,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAExBqF,EAAAA,CAFkCC,CAEcC,OAAA,CAAa,QAAA,CAAAC,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBC,KAAvB,EAA+B9E,CAAA,CAAsB6E,CAAtB,CAF0C,CAArB,CAKtDJ,EAAAN,MAAAY,MAAA,CAAoB,IAApB,CAPwCJ,CAOxC,CAEA,KAAK,IAAIrE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBoE,CAAAnE,OAApB,CAA4CD,CAAA,EAA5C,CACEnB,CAAAkC,eAAA,CAAyBqD,CAAA,CAAgBpE,CAAhB,CAAzB,CAGF,IAAIN,CAAA,CAAsB,IAAtB,CAAJ,CACE,IAASM,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAdsCqE,CAclBpE,OAApB,CAAkCD,CAAA,EAAlC,CACQuE,CACN,CAhBoCF,CAevB,CAAMrE,CAAN,CACb,CAAIuE,CAAJ,WAAoBrD,QAApB,EACErC,CAAAmC,YAAA,CAAsBuD,CAAtB,CAjBkC,CA0B1CxF,EAAA,YAAA,CAA6B,QAAA,CAAS,CAAT,CAAmB,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAE9BqF,KAAAA,EAFwCC,CAEQC,OAAA,CAAa,QAAA,CAAAC,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBC,KAAvB,EAA+B9E,CAAA,CAAsB6E,CAAtB,CAF0C,CAArB,CAAhDH,CAKAvD,EAAenB,CAAA,CAAsB,IAAtB,CAErByE,EAAAJ,YAAAU,MAAA,CAA0B,IAA1B,CAT8CJ,CAS9C,CAEA,KAAK,IAAIrE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBoE,CAAAnE,OAApB,CAA4CD,CAAA,EAA5C,CACEnB,CAAAkC,eAAA,CAAyBqD,CAAA,CAAgBpE,CAAhB,CAAzB,CAGF;GAAIa,CAAJ,CAEE,IADAhC,CAAAkC,eAAA,CAAyB,IAAzB,CACSf,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAjB4CqE,CAiBxBpE,OAApB,CAAkCD,CAAA,EAAlC,CACQuE,CACN,CAnB0CF,CAkB7B,CAAMrE,CAAN,CACb,CAAIuE,CAAJ,WAAoBrD,QAApB,EACErC,CAAAmC,YAAA,CAAsBuD,CAAtB,CApBwC,CA0BhDxF,EAAA,OAAA,CAAwB,QAAA,EAAW,CACjC,IAAM8B,EAAenB,CAAA,CAAsB,IAAtB,CAErByE,EAAAF,OAAAlE,KAAA,CAAoB,IAApB,CAEIc,EAAJ,EACEhC,CAAAkC,eAAA,CAAyB,IAAzB,CAN+B,CAlFoB,CCX1C2D,QAAA,EAAA,CAAS7F,CAAT,CAAoB,CA+JjC8F,QAASA,EAAiB,CAAC5F,CAAD,CAAcC,CAAd,CAA8B,CACtDC,MAAAC,eAAA,CAAsBH,CAAtB,CAAmC,aAAnC,CAAkD,CAChDI,WAAYH,CAAAG,WADoC,CAEhDC,aAAc,CAAA,CAFkC,CAGhDC,IAAKL,CAAAK,IAH2C,CAIhDC,IAAyBA,QAAA,CAAS4C,CAAT,CAAwB,CAE/C,GAAI,IAAA0C,SAAJ,GAAsBJ,IAAAK,UAAtB,CACE7F,CAAAM,IAAAS,KAAA,CAAwB,IAAxB,CAA8BmC,CAA9B,CADF,KAAA,CAKA,IAAI4C,EAAerF,IAAAA,EAGnB,IAAI,IAAAsF,WAAJ,CAAqB,CAGnB,IAAM1C,EAAa,IAAAA,WAAnB,CACM2C,EAAmB3C,CAAApC,OACzB,IAAuB,CAAvB,CAAI+E,CAAJ,EAA4BtF,CAAA,CAAsB,IAAtB,CAA5B,CAGE,IADA,IAAAoF,EAAmBG,KAAJ,CAAUD,CAAV,CAAf,CACShF,EAAI,CAAb,CAAgBA,CAAhB,CAAoBgF,CAApB,CAAsChF,CAAA,EAAtC,CACE8E,CAAA,CAAa9E,CAAb,CAAA,CAAkBqC,CAAA,CAAWrC,CAAX,CATH,CAcrBhB,CAAAM,IAAAS,KAAA,CAAwB,IAAxB;AAA8BmC,CAA9B,CAEA,IAAI4C,CAAJ,CACE,IAAS9E,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB8E,CAAA7E,OAApB,CAAyCD,CAAA,EAAzC,CACEnB,CAAAkC,eAAA,CAAyB+D,CAAA,CAAa9E,CAAb,CAAzB,CA1BJ,CAF+C,CAJD,CAAlD,CADsD,CA3JxDW,CAAA,CAA+B6D,IAAArD,UAA/B,CAA+C,cAA/C,CAOE,QAAA,CAASoD,CAAT,CAAeW,CAAf,CAAwB,CACtB,GAAIX,CAAJ,WAAoBY,iBAApB,CAAsC,CACpC,IAAMC,EAAgBH,KAAA9D,UAAAkE,MAAAZ,MAAA,CAA4BF,CAAAlC,WAA5B,CAChBiD,EAAAA,CAAeC,CAAAxF,KAAA,CAA8B,IAA9B,CAAoCwE,CAApC,CAA0CW,CAA1C,CAKrB,IAAIxF,CAAA,CAAsB,IAAtB,CAAJ,CACE,IAASM,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBoF,CAAAnF,OAApB,CAA0CD,CAAA,EAA1C,CACEnB,CAAAmC,YAAA,CAAsBoE,CAAA,CAAcpF,CAAd,CAAtB,CAIJ,OAAOsF,EAb6B,CAgBhCE,CAAAA,CAAmB9F,CAAA,CAAsB6E,CAAtB,CACnBe,EAAAA,CAAeC,CAAAxF,KAAA,CAA8B,IAA9B,CAAoCwE,CAApC,CAA0CW,CAA1C,CAEjBM,EAAJ,EACE3G,CAAAkC,eAAA,CAAyBwD,CAAzB,CAGE7E,EAAA,CAAsB,IAAtB,CAAJ,EACEb,CAAAmC,YAAA,CAAsBuD,CAAtB,CAGF,OAAOe,EA5Be,CAP1B,CAsCA3E,EAAA,CAA+B6D,IAAArD,UAA/B,CAA+C,aAA/C,CAME,QAAA,CAASoD,CAAT,CAAe,CACb,GAAIA,CAAJ,WAAoBY,iBAApB,CAAsC,CACpC,IAAMC,EAAgBH,KAAA9D,UAAAkE,MAAAZ,MAAA,CAA4BF,CAAAlC,WAA5B,CAChBiD,EAAAA,CAAe/C,CAAAxC,KAAA,CAA6B,IAA7B,CAAmCwE,CAAnC,CAKrB,IAAI7E,CAAA,CAAsB,IAAtB,CAAJ,CACE,IAAK,IAAIM;AAAI,CAAb,CAAgBA,CAAhB,CAAoBoF,CAAAnF,OAApB,CAA0CD,CAAA,EAA1C,CACEnB,CAAAmC,YAAA,CAAsBoE,CAAA,CAAcpF,CAAd,CAAtB,CAIJ,OAAOsF,EAb6B,CAgBhCE,CAAAA,CAAmB9F,CAAA,CAAsB6E,CAAtB,CACnBe,EAAAA,CAAe/C,CAAAxC,KAAA,CAA6B,IAA7B,CAAmCwE,CAAnC,CAEjBiB,EAAJ,EACE3G,CAAAkC,eAAA,CAAyBwD,CAAzB,CAGE7E,EAAA,CAAsB,IAAtB,CAAJ,EACEb,CAAAmC,YAAA,CAAsBuD,CAAtB,CAGF,OAAOe,EA5BM,CANjB,CAqCA3E,EAAA,CAA+B6D,IAAArD,UAA/B,CAA+C,WAA/C,CAME,QAAA,CAASsE,CAAT,CAAe,CACPC,CAAAA,CAAQ1D,CAAAjC,KAAA,CAA2B,IAA3B,CAAiC0F,CAAjC,CAGT,KAAApF,cAAAC,iBAAL,CAGEzB,CAAA0B,oBAAA,CAA8BmF,CAA9B,CAHF,CACE7G,CAAA2B,UAAA,CAAoBkF,CAApB,CAIF,OAAOA,EATM,CANjB,CAkBA/E,EAAA,CAA+B6D,IAAArD,UAA/B,CAA+C,aAA/C,CAME,QAAA,CAASoD,CAAT,CAAe,CACb,IAAMiB,EAAmB9F,CAAA,CAAsB6E,CAAtB,CAAzB,CACMe,EAAehD,CAAAvC,KAAA,CAA6B,IAA7B,CAAmCwE,CAAnC,CAEjBiB,EAAJ,EACE3G,CAAAkC,eAAA,CAAyBwD,CAAzB,CAGF,OAAOe,EARM,CANjB,CAiBA3E,EAAA,CAA+B6D,IAAArD,UAA/B,CAA+C,cAA/C,CAOE,QAAA,CAASwE,CAAT,CAAuBC,CAAvB,CAAqC,CACnC,GAAID,CAAJ,WAA4BR,iBAA5B,CAA8C,CAC5C,IAAMC,EAAgBH,KAAA9D,UAAAkE,MAAAZ,MAAA,CAA4BkB,CAAAtD,WAA5B,CAChBiD;CAAAA,CAAeO,CAAA9F,KAAA,CAA8B,IAA9B,CAAoC4F,CAApC,CAAkDC,CAAlD,CAKrB,IAAIlG,CAAA,CAAsB,IAAtB,CAAJ,CAEE,IADAb,CAAAkC,eAAA,CAAyB6E,CAAzB,CACS5F,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAAoBoF,CAAAnF,OAApB,CAA0CD,CAAA,EAA1C,CACEnB,CAAAmC,YAAA,CAAsBoE,CAAA,CAAcpF,CAAd,CAAtB,CAIJ,OAAOsF,EAdqC,CAiBxCQ,IAAAA,EAA2BpG,CAAA,CAAsBiG,CAAtB,CAA3BG,CACAR,EAAeO,CAAA9F,KAAA,CAA8B,IAA9B,CAAoC4F,CAApC,CAAkDC,CAAlD,CADfE,CAEAC,EAAkBrG,CAAA,CAAsB,IAAtB,CAEpBqG,EAAJ,EACElH,CAAAkC,eAAA,CAAyB6E,CAAzB,CAGEE,EAAJ,EACEjH,CAAAkC,eAAA,CAAyB4E,CAAzB,CAGEI,EAAJ,EACElH,CAAAmC,YAAA,CAAsB2E,CAAtB,CAGF,OAAOL,EAlC4B,CAPvC,CAqFIU,EAAJ,EAA+BA,CAAA3G,IAA/B,CACEsF,CAAA,CAAkBH,IAAArD,UAAlB,CAAkC6E,CAAlC,CADF,CAGEnH,CAAAkD,SAAA,CAAmB,QAAA,CAASlC,CAAT,CAAkB,CACnC8E,CAAA,CAAkB9E,CAAlB,CAA2B,CACzBV,WAAY,CAAA,CADa,CAEzBC,aAAc,CAAA,CAFW,CAKzBC,IAAyBA,QAAA,EAAW,CAIlC,IAFA,IAAM4G,EAAQ,EAAd,CAESjG,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAAqC,WAAApC,OAApB,CAA4CD,CAAA,EAA5C,CACEiG,CAAAnG,KAAA,CAAW,IAAAuC,WAAA,CAAgBrC,CAAhB,CAAAkG,YAAX,CAGF,OAAOD,EAAAE,KAAA,CAAW,EAAX,CAR2B,CALX,CAezB7G,IAAyBA,QAAA,CAAS4C,CAAT,CAAwB,CAC/C,IAAA,CAAO,IAAA6C,WAAP,CAAA,CACEzC,CAAAvC,KAAA,CAA6B,IAA7B,CAAmC,IAAAgF,WAAnC,CAEFxC,EAAAxC,KAAA,CAA6B,IAA7B;AAAmC+B,QAAAsE,eAAA,CAAwBlE,CAAxB,CAAnC,CAJ+C,CAfxB,CAA3B,CADmC,CAArC,CA1M+B,CCEpBmE,QAAA,EAAA,CAASxH,CAAT,CAAoB,CACjC8B,CAAA,CAA+B2F,QAAAnF,UAA/B,CAAmD,eAAnD,CAME,QAAA,CAASiB,CAAT,CAAoB,CAElB,GAAI,IAAA9B,iBAAJ,CAA2B,CACzB,IAAMiG,EAAa1H,CAAA2H,sBAAA,CAAgCpE,CAAhC,CACnB,IAAImE,CAAJ,CACE,MAAO,KAAKA,CAAAE,YAHW,CAOrBC,CAAAA,CACH7E,CAAA9B,KAAA,CAAmC,IAAnC,CAAyCqC,CAAzC,CACHvD,EAAA8H,MAAA,CAAgBD,CAAhB,CACA,OAAOA,EAZW,CANtB,CAqBA/F,EAAA,CAA+B2F,QAAAnF,UAA/B,CAAmD,YAAnD,CAOE,QAAA,CAASoD,CAAT,CAAekB,CAAf,CAAqB,CACbC,CAAAA,CAAQkB,EAAA7G,KAAA,CAAgC,IAAhC,CAAsCwE,CAAtC,CAA4CkB,CAA5C,CAET,KAAAnF,iBAAL,CAGEzB,CAAA0B,oBAAA,CAA8BmF,CAA9B,CAHF,CACE7G,CAAA2B,UAAA,CAAoBkF,CAApB,CAIF,OAAOA,EARY,CAPvB,CAoBA/E,EAAA,CAA+B2F,QAAAnF,UAA/B,CAAmD,iBAAnD,CAOE,QAAA,CAAS2B,CAAT,CAAoBV,CAApB,CAA+B,CAE7B,GAAI,IAAA9B,iBAAJ,GAA4C,IAA5C,GAA8BwC,CAA9B,EAXY+D,8BAWZ,GAAoD/D,CAApD,EAA4E,CAC1E,IAAMyD,EAAa1H,CAAA2H,sBAAA,CAAgCpE,CAAhC,CACnB;GAAImE,CAAJ,CACE,MAAO,KAAKA,CAAAE,YAH4D,CAOtEC,CAAAA,CACHI,EAAA/G,KAAA,CAAqC,IAArC,CAA2C+C,CAA3C,CAAsDV,CAAtD,CACHvD,EAAA8H,MAAA,CAAgBD,CAAhB,CACA,OAAOA,EAZsB,CAPjC,CAsBArD,EAAA,CAAgBxE,CAAhB,CAA2ByH,QAAAnF,UAA3B,CAA+C,CAC7CmC,QAASyD,EADoC,CAE7CvD,OAAQwD,EAFqC,CAA/C,CAhEiC,CCOpB3D,QAAA,EAAA,CAASxE,CAAT,CAAoBE,CAApB,CAAiCoF,CAAjC,CAA0C,CAIvDpF,CAAA,QAAA,CAAyB,QAAA,CAAS,CAAT,CAAmB,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAE1BqF,EAAAA,CAFoCC,CAEYC,OAAA,CAAa,QAAA,CAAAC,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBC,KAAvB,EAA+B9E,CAAA,CAAsB6E,CAAtB,CAF0C,CAArB,CAKtDJ,EAAAb,QAAAmB,MAAA,CAAsB,IAAtB,CAP0CJ,CAO1C,CAEA,KAAK,IAAIrE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBoE,CAAAnE,OAApB,CAA4CD,CAAA,EAA5C,CACEnB,CAAAkC,eAAA,CAAyBqD,CAAA,CAAgBpE,CAAhB,CAAzB,CAGF,IAAIN,CAAA,CAAsB,IAAtB,CAAJ,CACE,IAASM,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAdwCqE,CAcpBpE,OAApB,CAAkCD,CAAA,EAAlC,CACQuE,CACN,CAhBsCF,CAezB,CAAMrE,CAAN,CACb,CAAIuE,CAAJ,WAAoBrD,QAApB,EACErC,CAAAmC,YAAA,CAAsBuD,CAAtB,CAjBoC,CA0B5CxF,EAAA,OAAA,CAAwB,QAAA,CAAS,CAAT,CAAmB,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAEzBqF;CAAAA,CAFmCC,CAEaC,OAAA,CAAa,QAAA,CAAAC,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBC,KAAvB,EAA+B9E,CAAA,CAAsB6E,CAAtB,CAF0C,CAArB,CAKtDJ,EAAAX,OAAAiB,MAAA,CAAqB,IAArB,CAPyCJ,CAOzC,CAEA,KAAK,IAAIrE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBoE,CAAAnE,OAApB,CAA4CD,CAAA,EAA5C,CACEnB,CAAAkC,eAAA,CAAyBqD,CAAA,CAAgBpE,CAAhB,CAAzB,CAGF,IAAIN,CAAA,CAAsB,IAAtB,CAAJ,CACE,IAASM,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAduCqE,CAcnBpE,OAApB,CAAkCD,CAAA,EAAlC,CACQuE,CACN,CAhBqCF,CAexB,CAAMrE,CAAN,CACb,CAAIuE,CAAJ,WAAoBrD,QAApB,EACErC,CAAAmC,YAAA,CAAsBuD,CAAtB,CAjBmC,CA9BY,CCR1C0C,QAAA,GAAA,CAASpI,CAAT,CAAoB,CACjCqI,MAAA,YAAA,CAAyB,QAAA,EAAW,CAIlCvF,QAASA,EAAW,EAAG,CAKrB,IAAM8E,EAAc,IAAAA,YAApB,CAEMF,EAAa1H,CAAAsI,wBAAA,CAAkCV,CAAlC,CACnB,IAAKF,CAAAA,CAAL,CACE,KAAUa,MAAJ,CAAU,gFAAV,CAAN,CAGF,IAAMC,EAAoBd,CAAAc,kBAE1B,IAAiC,CAAjC,GAAIA,CAAApH,OAAJ,CAME,MALMJ,EAKCA,CALSgC,CAAA9B,KAAA,CAAmC+B,QAAnC,CAA6CyE,CAAAnE,UAA7C,CAKTvC;AAJPZ,MAAAqI,eAAA,CAAsBzH,CAAtB,CAA+B4G,CAAAtF,UAA/B,CAIOtB,CAHPA,CAAAM,WAGON,CL7BLK,CK6BKL,CAFPA,CAAA0H,gBAEO1H,CAFmB0G,CAEnB1G,CADPhB,CAAA8H,MAAA,CAAgB9G,CAAhB,CACOA,CAAAA,CAGH2H,KAAAA,EAAYH,CAAApH,OAAZuH,CAAuC,CAAvCA,CACA3H,EAAUwH,CAAA,CAAkBG,CAAlB,CAChB,IAAI3H,CAAJ,GAAgB4H,CAAhB,CACE,KAAUL,MAAJ,CAAU,0GAAV,CAAN,CAEFC,CAAA,CAAkBG,CAAlB,CAAA,CAA+BC,CAE/BxI,OAAAqI,eAAA,CAAsBzH,CAAtB,CAA+B4G,CAAAtF,UAA/B,CACAtC,EAAA8H,MAAA,CAA6C9G,CAA7C,CAEA,OAAOA,EAjCc,CAoCvB8B,CAAAR,UAAA,CAAwBQ,EAAAR,UAExB,OAAOQ,EA1C2B,CAAZ,EADS,CCKjC8E,QALmBiB,EAKR,CAAC7I,CAAD,CAAY,CAKrB,IAAA8I,4BAAA,CAAmC,CAAA,CAMnC,KAAAC,WAAA,CAAkB/I,CAMlB,KAAAgJ,qBAAA,CAA4B,IAAIC,GAOhC,KAAAC,eAAA,CAAsBC,QAAA,CAAAC,CAAA,CAAM,CAAA,MAAAA,EAAA,EAAA,CAM5B,KAAAC,cAAA;AAAqB,CAAA,CAMrB,KAAAC,qBAAA,CAA4B,EAM5B,KAAAC,8BAAA,CAAqC,IAAIC,CAAJ,CAAiCxJ,CAAjC,CAA4CiD,QAA5C,CA1ChB,CCTvB2E,QADmB6B,EACR,EAAG,CAAA,IAAA,EAAA,IAWZ,KAAAC,SAAA,CANA,IAAAC,OAMA,CANc/I,IAAAA,EAYd,KAAAgJ,SAAA,CAAgB,IAAIC,OAAJ,CAAY,QAAA,CAAAC,CAAA,CAAW,CACrC,CAAAJ,SAAA,CAAgBI,CAEZ,EAAAH,OAAJ,EACEG,CAAA,CAAQ,CAAAH,OAAR,CAJmC,CAAvB,CAjBJ,CCDd/B,QADmB4B,EACR,CAACxJ,CAAD,CAAY+J,CAAZ,CAAiB,CAI1B,IAAAhB,WAAA,CAAkB/I,CAKlB,KAAAgK,UAAA,CAAiBD,CAKjB,KAAAE,UAAA,CAAiBrJ,IAAAA,EAKjB,KAAAmI,WAAArH,oBAAA,CAAoC,IAAAsI,UAApC,CAEkC,UAAlC,GAAI,IAAAA,UAAAE,WAAJ,GACE,IAAAD,UAMA,CANiB,IAAIE,gBAAJ,CAAqB,IAAAC,iBAAAC,KAAA,CAA2B,IAA3B,CAArB,CAMjB,CAAA,IAAAJ,UAAAK,QAAA,CAAuB,IAAAN,UAAvB,CAAuC,CACrCO,UAAW,CAAA,CAD0B;AAErCC,QAAS,CAAA,CAF4B,CAAvC,CAPF,CArB0B,CCC5B5C,QADmB6C,EACR,EAAG,CAEZ,IAAAC,uBAAA,CAA8B,IAAIzB,GAGlC,KAAA0B,yBAAA,CAAgC,IAAI1B,GAGpC,KAAA2B,SAAA,CAAgB,EAGhB,KAAAC,YAAA,CAAmB,CAAA,CAXP,CCWTC,QAASA,EAAwB,CAACvH,CAAD,CAAY,CAClD,IAAMwH,EAAWC,EAAAC,IAAA,CAAoB1H,CAApB,CACX2H,EAAAA,CAAY,kCAAAC,KAAA,CAAwC5H,CAAxC,CAClB,OAAO,CAACwH,CAAR,EAAoBG,CAH8B,CAW7CrK,QAASA,EAAW,CAAC6E,CAAD,CAAO,CAEhC,IAAM0F,EAAc1F,CAAA7E,YACpB,IAAoBD,IAAAA,EAApB,GAAIwK,CAAJ,CACE,MAAOA,EAKT,KAAA,CAAOC,CAAP,EAAoB,EAAAA,CAAAC,sBAAA,EAAiCD,CAAjC,WAAoD5D,SAApD,CAApB,CAAA,CACE4D,CAAA,CAAUA,CAAAE,WAAV,GAAiClD,MAAAmD,WAAA,EAAqBH,CAArB,WAAwCG,WAAxC,CAAqDH,CAAAI,KAArD,CAAoE7K,IAAAA,EAArG,CAEF,OAAO,EAAGyK,CAAAA,CAAH,EAAe,EAAAA,CAAAC,sBAAA,EAAiCD,CAAjC,WAAoD5D,SAApD,CAAf,CAZyB,CAoBlCiE,QAASA,EAA4B,CAACC,CAAD,CAAOC,CAAP,CAAc,CAEjD,IAAA,CAAOlG,CAAP;AAAeA,CAAf,GAAwBiG,CAAxB,EAAiCE,CAAAnG,CAAAmG,YAAjC,CAAA,CACEnG,CAAA,CAAOA,CAAA6F,WAET,OAAS7F,EAAF,EAAUA,CAAV,GAAmBiG,CAAnB,CAAkCjG,CAAAmG,YAAlC,CAA2B,IALe,CAsB5C9K,QAASA,EAA0B,CAAC4K,CAAD,CAAOG,CAAP,CAAiBC,CAAjB,CAA6C,CAA5BA,CAAA,CAAA,IAAA,EAAA,GAAAA,CAAA,CAAiB,IAAIC,GAArB,CAAAD,CAEzD,KADA,IAAIrG,EAAOiG,CACX,CAAOjG,CAAP,CAAA,CAAa,CACX,GAAIA,CAAAK,SAAJ,GAAsBJ,IAAAsG,aAAtB,CAAyC,CACvC,IAAMjL,EAAkC0E,CAExCoG,EAAA,CAAS9K,CAAT,CAEA,KAAMuC,EAAYvC,CAAAuC,UAClB,IAAkB,MAAlB,GAAIA,CAAJ,EAA4D,QAA5D,GAA4BvC,CAAAkL,aAAA,CAAqB,KAArB,CAA5B,CAAsE,CAG9DC,CAAAA,CAAmCnL,CAAAoL,OACzC,IAAID,CAAJ,WAA0BxG,KAA1B,EAAmC,CAAAoG,CAAAd,IAAA,CAAmBkB,CAAnB,CAAnC,CAIE,IAFAJ,CAAAM,IAAA,CAAmBF,CAAnB,CAESG,CAAAA,CAAAA,CAAQH,CAAAjG,WAAjB,CAAwCoG,CAAxC,CAA+CA,CAA/C,CAAuDA,CAAAT,YAAvD,CACE9K,CAAA,CAA2BuL,CAA3B,CAAkCR,CAAlC,CAA4CC,CAA5C,CAOJrG,EAAA,CAAOgG,CAAA,CAA6BC,CAA7B,CAAmC3K,CAAnC,CACP,SAjBoE,CAAtE,IAkBO,IAAkB,UAAlB,GAAIuC,CAAJ,CAA8B,CAKnCmC,CAAA,CAAOgG,CAAA,CAA6BC,CAA7B,CAAmC3K,CAAnC,CACP,SANmC,CAWrC,GADMyB,CACN,CADmBzB,CAAAwB,gBACnB,CACE,IAAS8J,CAAT,CAAiB7J,CAAAyD,WAAjB,CAAwCoG,CAAxC,CAA+CA,CAA/C,CAAuDA,CAAAT,YAAvD,CACE9K,CAAA,CAA2BuL,CAA3B,CAAkCR,CAAlC,CAA4CC,CAA5C,CArCmC,CA0CzCrG,CAAA,CAAsBA,CArDjBQ,WAAA,CAqDiBR,CArDEQ,WAAnB,CAAsCwF,CAAA,CAqD3BC,CArD2B;AAqDrBjG,CArDqB,CAUhC,CAFwE,CA0DvF5D,QAAgBA,EAAoB,CAAC5B,CAAD,CAAcyD,CAAd,CAAoB4I,CAApB,CAA2B,CAC7DrM,CAAA,CAAYyD,CAAZ,CAAA,CAAoB4I,CADyC,CA9H/D,IAAMvB,GAAkB,IAAIgB,GAAJ,CAAQ,kHAAA,MAAA,CAAA,GAAA,CAAR,CDsBtB,EAAA,UAAA,cAAA,CAAAQ,QAAa,CAACjJ,CAAD,CAAYmE,CAAZ,CAAwB,CACnC,IAAAgD,uBAAAjK,IAAA,CAAgC8C,CAAhC,CAA2CmE,CAA3C,CACA,KAAAiD,yBAAAlK,IAAA,CAAkCiH,CAAAE,YAAlC,CAA0DF,CAA1D,CAFmC,CASrC,EAAA,UAAA,sBAAA,CAAAC,QAAqB,CAACpE,CAAD,CAAY,CAC/B,MAAO,KAAAmH,uBAAAlK,IAAA,CAAgC+C,CAAhC,CADwB,CAQjC,EAAA,UAAA,wBAAA,CAAA+E,QAAuB,CAACV,CAAD,CAAc,CACnC,MAAO,KAAA+C,yBAAAnK,IAAA,CAAkCoH,CAAlC,CAD4B,CAOrC,EAAA,UAAA,SAAA;AAAA1E,QAAQ,CAACuJ,CAAD,CAAW,CACjB,IAAA5B,YAAA,CAAmB,CAAA,CACnB,KAAAD,SAAA3J,KAAA,CAAmBwL,CAAnB,CAFiB,CAQnB,EAAA,UAAA,UAAA,CAAA9K,QAAS,CAAC+D,CAAD,CAAO,CAAA,IAAA,EAAA,IACT,KAAAmF,YAAL,EAEA9J,CAAA,CAAqC2E,CAArC,CAA2C,QAAA,CAAA1E,CAAA,CAAW,CAAA,MAAA,EAAA8G,MAAA,CAAW9G,CAAX,CAAA,CAAtD,CAHc,CAShB,EAAA,UAAA,MAAA,CAAA8G,QAAK,CAACpC,CAAD,CAAO,CACV,GAAK,IAAAmF,YAAL,EAEI6B,CAAAhH,CAAAgH,aAFJ,CAEA,CACAhH,CAAAgH,aAAA,CAAoB,CAAA,CAEpB,KAAK,IAAIvL,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAAyJ,SAAAxJ,OAApB,CAA0CD,CAAA,EAA1C,CACE,IAAAyJ,SAAA,CAAczJ,CAAd,CAAA,CAAiBuE,CAAjB,CAJF,CAHU,CAcZ,EAAA,UAAA,YAAA,CAAAvD,QAAW,CAACwJ,CAAD,CAAO,CAChB,IAAMgB,EAAW,EAEjB5L,EAAA,CAAqC4K,CAArC,CAA2C,QAAA,CAAA3K,CAAA,CAAW,CAAA,MAAA2L,EAAA1L,KAAA,CAAcD,CAAd,CAAA,CAAtD,CAEA,KAASG,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBwL,CAAAvL,OAApB,CAAqCD,CAAA,EAArC,CAA0C,CACxC,IAAMH,EAAU2L,CAAA,CAASxL,CAAT,CT/EZE,ESgFJ,GAAIL,CAAAM,WAAJ,CACE,IAAAsL,kBAAA,CAAuB5L,CAAvB,CADF,CAGE,IAAA6L,eAAA,CAAoB7L,CAApB,CALsC,CAL1B,CAkBlB,EAAA,UAAA,eAAA;AAAAkB,QAAc,CAACyJ,CAAD,CAAO,CACnB,IAAMgB,EAAW,EAEjB5L,EAAA,CAAqC4K,CAArC,CAA2C,QAAA,CAAA3K,CAAA,CAAW,CAAA,MAAA2L,EAAA1L,KAAA,CAAcD,CAAd,CAAA,CAAtD,CAEA,KAASG,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBwL,CAAAvL,OAApB,CAAqCD,CAAA,EAArC,CAA0C,CACxC,IAAMH,EAAU2L,CAAA,CAASxL,CAAT,CTjGZE,ESkGJ,GAAIL,CAAAM,WAAJ,EACE,IAAAC,qBAAA,CAA0BP,CAA1B,CAHsC,CALvB,CA4ErB,EAAA,UAAA,oBAAA,CAAAU,QAAmB,CAACiK,CAAD,CAAOI,CAAP,CAAmC,CAA5BA,CAAA,CAAA,IAAA,EAAA,GAAAA,CAAA,CAAiB,IAAIC,GAArB,CAAAD,CAA4B,KAAA,EAAA,IAAA,CAC9CY,EAAW,EA6CjB5L,EAAA,CAAqC4K,CAArC,CA3CuBmB,QAAA,CAAA9L,CAAA,CAAW,CAChC,GAA0B,MAA1B,GAAIA,CAAAuC,UAAJ,EAAoE,QAApE,GAAoCvC,CAAAkL,aAAA,CAAqB,KAArB,CAApC,CAA8E,CAG5E,IAAMC,EAAmCnL,CAAAoL,OAErCD,EAAJ,WAA0BxG,KAA1B,EAA4D,UAA5D,GAAkCwG,CAAAjC,WAAlC,EACEiC,CAAAb,sBAGA,CAHmC,CAAA,CAGnC,CAAAa,CAAA1K,iBAAA,CAA8B,CAAA,CAJhC,EAQET,CAAA+L,iBAAA,CAAyB,MAAzB,CAAiC,QAAA,EAAM,CACrC,IAAMZ,EAAmCnL,CAAAoL,OAErCD,EAAAa,yBAAJ,GACAb,CAAAa,yBAeA;AAfsC,CAAA,CAetC,CAbAb,CAAAb,sBAaA,CAbmC,CAAA,CAanC,CAVAa,CAAA1K,iBAUA,CAV8B,CAAA,CAU9B,CAH6B,IAAIuK,GAAJ,CAAQD,CAAR,CAG7B,CAFAA,CAAAkB,OAAA,CAAsBd,CAAtB,CAEA,CAAA,CAAAzK,oBAAA,CAAyByK,CAAzB,CAAqCJ,CAArC,CAhBA,CAHqC,CAAvC,CAb0E,CAA9E,IAoCEY,EAAA1L,KAAA,CAAcD,CAAd,CArC8B,CA2ClC,CAA2D+K,CAA3D,CAEA,IAAI,IAAAlB,YAAJ,CACE,IAAS1J,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBwL,CAAAvL,OAApB,CAAqCD,CAAA,EAArC,CACE,IAAA2G,MAAA,CAAW6E,CAAA,CAASxL,CAAT,CAAX,CAIJ,KAASA,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBwL,CAAAvL,OAApB,CAAqCD,CAAA,EAArC,CACE,IAAA0L,eAAA,CAAoBF,CAAA,CAASxL,CAAT,CAApB,CAvDkD,CA8DtD,EAAA,UAAA,eAAA,CAAA0L,QAAc,CAAC7L,CAAD,CAAU,CAEtB,GAAqBJ,IAAAA,EAArB,GADqBI,CAAAM,WACrB,CAAA,CAEA,IAAMoG,EAAa,IAAAC,sBAAA,CAA2B3G,CAAAuC,UAA3B,CACnB,IAAKmE,CAAL,CAAA,CAEAA,CAAAc,kBAAAvH,KAAA,CAAkCD,CAAlC,CAEA,KAAM4G,EAAcF,CAAAE,YACpB,IAAI,CACF,GAAI,CAEF,GADaC,IAAKD,CAClB,GAAe5G,CAAf,CACE,KAAUuH,MAAJ,CAAU,4EAAV,CAAN;AAHA,CAAJ,OAKU,CACRb,CAAAc,kBAAA0E,IAAA,EADQ,CANR,CASF,MAAOC,CAAP,CAAU,CAEV,KADAnM,EAAAM,WACM6L,CTzPFC,CSyPED,CAAAA,CAAN,CAFU,CAKZnM,CAAAM,WAAA,CT7PMD,CS8PNL,EAAA0H,gBAAA,CAA0BhB,CAE1B,IAAIA,CAAA1D,yBAAJ,CAEE,IADMqJ,CACGlM,CADkBuG,CAAA2F,mBAClBlM,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAAoBkM,CAAAjM,OAApB,CAA+CD,CAAA,EAA/C,CAAoD,CAClD,IAAMwC,EAAO0J,CAAA,CAAmBlM,CAAnB,CAAb,CACMoL,EAAQvL,CAAAkL,aAAA,CAAqBvI,CAArB,CACA,KAAd,GAAI4I,CAAJ,EACE,IAAAvI,yBAAA,CAA8BhD,CAA9B,CAAuC2C,CAAvC,CAA6C,IAA7C,CAAmD4I,CAAnD,CAA0D,IAA1D,CAJgD,CASlD1L,CAAA,CAAsBG,CAAtB,CAAJ,EACE,IAAA4L,kBAAA,CAAuB5L,CAAvB,CAlCF,CAHA,CAFsB,CA8CxB,EAAA,UAAA,kBAAA,CAAA4L,QAAiB,CAAC5L,CAAD,CAAU,CACzB,IAAM0G,EAAa1G,CAAA0H,gBACfhB,EAAAkF,kBAAJ,EACElF,CAAAkF,kBAAA1L,KAAA,CAAkCF,CAAlC,CAHuB,CAU3B,EAAA,UAAA,qBAAA,CAAAO,QAAoB,CAACP,CAAD,CAAU,CAC5B,IAAM0G,EAAa1G,CAAA0H,gBACfhB,EAAAnG,qBAAJ;AACEmG,CAAAnG,qBAAAL,KAAA,CAAqCF,CAArC,CAH0B,CAc9B,EAAA,UAAA,yBAAA,CAAAgD,QAAwB,CAAChD,CAAD,CAAU2C,CAAV,CAAgBG,CAAhB,CAA0BF,CAA1B,CAAoCK,CAApC,CAA+C,CACrE,IAAMyD,EAAa1G,CAAA0H,gBAEjBhB,EAAA1D,yBADF,EAEiD,EAFjD,CAEE0D,CAAA2F,mBAAAC,QAAA,CAAsC3J,CAAtC,CAFF,EAIE+D,CAAA1D,yBAAA9C,KAAA,CAAyCF,CAAzC,CAAkD2C,CAAlD,CAAwDG,CAAxD,CAAkEF,CAAlE,CAA4EK,CAA5E,CANmE,CDzQvE,EAAA,UAAA,WAAA,CAAAsJ,QAAU,EAAG,CACP,IAAAtD,UAAJ,EACE,IAAAA,UAAAsD,WAAA,EAFS,CASb,EAAA,UAAA,iBAAA,CAAAnD,QAAgB,CAACoD,CAAD,CAAY,CAI1B,IAAMtD,EAAa,IAAAF,UAAAE,WACA,cAAnB,GAAIA,CAAJ,EAAmD,UAAnD,GAAoCA,CAApC,EACE,IAAAqD,WAAA,EAGF,KAASpM,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBqM,CAAApM,OAApB,CAAsCD,CAAA,EAAtC,CAEE,IADA,IAAMsM,EAAaD,CAAA,CAAUrM,CAAV,CAAAsM,WAAnB,CACSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,CAAArM,OAApB,CAAuCsM,CAAA,EAAvC,CAEE,IAAA3E,WAAArH,oBAAA,CADa+L,CAAA/H,CAAWgI,CAAXhI,CACb,CAbsB,CDd5B;CAAA,UAAA,QAAA,CAAAoE,QAAO,CAACyC,CAAD,CAAQ,CACb,GAAI,IAAA5C,OAAJ,CACE,KAAUpB,MAAJ,CAAU,mBAAV,CAAN,CAGF,IAAAoB,OAAA,CAAc4C,CAEV,KAAA7C,SAAJ,EACE,IAAAA,SAAA,CAAc6C,CAAd,CARW,CAef,EAAA,UAAA,UAAA,CAAAoB,QAAS,EAAG,CACV,MAAO,KAAA/D,SADG,CDcZ,EAAA,UAAA,OAAA,CAAAgE,QAAM,CAACrK,CAAD,CAAYqE,CAAZ,CAAyB,CAAA,IAAA,EAAA,IAC7B,IAAM,EAAAA,CAAA,WAAuBiG,SAAvB,CAAN,CACE,KAAM,KAAIC,SAAJ,CAAc,gDAAd,CAAN,CAGF,GAAK,CAAAhD,CAAA,CAAmCvH,CAAnC,CAAL,CACE,KAAM,KAAIwK,WAAJ,CAAgB,oBAAhB,CAAqCxK,CAArC,CAA8C,iBAA9C,CAAN,CAGF,GAAI,IAAAwF,WAAApB,sBAAA,CAAsCpE,CAAtC,CAAJ,CACE,KAAUgF,MAAJ,CAAU,8BAAV,CAAyChF,CAAzC,CAAkD,6BAAlD,CAAN;AAGF,GAAI,IAAAuF,4BAAJ,CACE,KAAUP,MAAJ,CAAU,4CAAV,CAAN,CAEF,IAAAO,4BAAA,CAAmC,CAAA,CAEnC,KAAI8D,CAAJ,CACIrL,CADJ,CAEIyM,CAFJ,CAGIhK,CAHJ,CAIIqJ,CACJ,IAAI,CAOFY,IAASA,EAATA,QAAoB,CAACtK,CAAD,CAAO,CACzB,IAAMuK,EAAgB5L,CAAA,CAAUqB,CAAV,CACtB,IAAsB/C,IAAAA,EAAtB,GAAIsN,CAAJ,EAAqC,EAAAA,CAAA,WAAyBL,SAAzB,CAArC,CACE,KAAUtF,MAAJ,CAAU,OAAV,CAAkB5E,CAAlB,CAAsB,gCAAtB,CAAN,CAEF,MAAOuK,EALkB,CAA3BD,CALM3L,EAAYsF,CAAAtF,UAClB,IAAM,EAAAA,CAAA,WAAqBlC,OAArB,CAAN,CACE,KAAM,KAAI0N,SAAJ,CAAc,8DAAd,CAAN,CAWFlB,CAAA,CAAoBqB,CAAA,CAAY,mBAAZ,CACpB1M,EAAA,CAAuB0M,CAAA,CAAY,sBAAZ,CACvBD,EAAA,CAAkBC,CAAA,CAAY,iBAAZ,CAClBjK,EAAA,CAA2BiK,CAAA,CAAY,0BAAZ,CAC3BZ;CAAA,CAAqBzF,CAAA,mBAArB,EAA0D,EAnBxD,CAoBF,MAAOuF,EAAP,CAAU,CACV,MADU,CApBZ,OAsBU,CACR,IAAArE,4BAAA,CAAmC,CAAA,CAD3B,CAeV,IAAAC,WAAAyD,cAAA,CAA8BjJ,CAA9B,CAXmBmE,CACjBnE,UAAAA,CADiBmE,CAEjBE,YAAAA,CAFiBF,CAGjBkF,kBAAAA,CAHiBlF,CAIjBnG,qBAAAA,CAJiBmG,CAKjBsG,gBAAAA,CALiBtG,CAMjB1D,yBAAAA,CANiB0D,CAOjB2F,mBAAAA,CAPiB3F,CAQjBc,kBAAmB,EARFd,CAWnB,CAEA,KAAA4B,qBAAArI,KAAA,CAA+BsC,CAA/B,CAIK,KAAA8F,cAAL,GACE,IAAAA,cACA,CADqB,CAAA,CACrB,CAAA,IAAAH,eAAA,CAAoB,QAAA,EAAM,CAAA,MAAA,EAAAiF,OAAA,EAAA,CAA1B,CAFF,CAlE6B,CAwE/B,EAAA,UAAA,OAAA,CAAAA,QAAM,EAAG,CAIP,GAA2B,CAAA,CAA3B,GAAI,IAAA9E,cAAJ,CAKA,IAHA,IAAAA,cACA,CADqB,CAAA,CACrB,CAAA,IAAAN,WAAArH,oBAAA,CAAoCuB,QAApC,CAEA,CAA0C,CAA1C;AAAO,IAAAqG,qBAAAlI,OAAP,CAAA,CAA6C,CAC3C,IAAMmC,EAAY,IAAA+F,qBAAA8E,MAAA,EAElB,EADMC,CACN,CADiB,IAAArF,qBAAAxI,IAAA,CAA8B+C,CAA9B,CACjB,GACE8K,CAAAvE,QAAA,CAAiBlJ,IAAAA,EAAjB,CAJyC,CATtC,CAsBT,EAAA,UAAA,IAAA,CAAAJ,QAAG,CAAC+C,CAAD,CAAY,CAEb,GADMmE,CACN,CADmB,IAAAqB,WAAApB,sBAAA,CAAsCpE,CAAtC,CACnB,CACE,MAAOmE,EAAAE,YAHI,CAaf,EAAA,UAAA,YAAA,CAAA0G,QAAW,CAAC/K,CAAD,CAAY,CACrB,GAAK,CAAAuH,CAAA,CAAmCvH,CAAnC,CAAL,CACE,MAAOsG,QAAA0E,OAAA,CAAe,IAAIR,WAAJ,CAAgB,GAAhB,CAAoBxK,CAApB,CAA6B,uCAA7B,CAAf,CAGT,KAAMiL,EAAQ,IAAAxF,qBAAAxI,IAAA,CAA8B+C,CAA9B,CACd,IAAIiL,CAAJ,CACE,MAAOA,EAAAb,UAAA,EAGHU,EAAAA,CAAW,IAAI5E,CACrB,KAAAT,qBAAAvI,IAAA,CAA8B8C,CAA9B,CAAyC8K,CAAzC,CAEmB,KAAAtF,WAAApB,sBAAAD,CAAsCnE,CAAtCmE,CAInB;AAAoE,EAApE,GAAkB,IAAA4B,qBAAAgE,QAAA,CAAkC/J,CAAlC,CAAlB,EACE8K,CAAAvE,QAAA,CAAiBlJ,IAAAA,EAAjB,CAGF,OAAOyN,EAAAV,UAAA,EArBc,CAwBvB,EAAA,UAAA,0BAAA,CAAAc,QAAyB,CAACC,CAAD,CAAQ,CAC/B,IAAAnF,8BAAAgE,WAAA,EACA,KAAMoB,EAAQ,IAAAzF,eACd,KAAAA,eAAA,CAAsBC,QAAA,CAAAyF,CAAA,CAAS,CAAA,MAAAF,EAAA,CAAM,QAAA,EAAM,CAAA,MAAAC,EAAA,CAAMC,CAAN,CAAA,CAAZ,CAAA,CAHA,CAQnCvG,OAAA,sBAAA,CAAkCQ,CAClCA,EAAAvG,UAAA,OAAA,CAA4CuG,CAAAvG,UAAAsL,OAC5C/E,EAAAvG,UAAA,IAAA,CAAyCuG,CAAAvG,UAAA9B,IACzCqI,EAAAvG,UAAA,YAAA,CAAiDuG,CAAAvG,UAAAgM,YACjDzF,EAAAvG,UAAA,0BAAA,CAA+DuG,CAAAvG,UAAAmM,0BK5MrCI,KAAAA;AAAAxG,MAAAZ,SAAAnF,UAAAuM,cAAAA,CACEC,GAAAzG,MAAAZ,SAAAnF,UAAAwM,gBADFD,CAEH1C,GAAA9D,MAAAZ,SAAAnF,UAAA6J,WAFG0C,CAGN,GAAAxG,MAAAZ,SAAAnF,UAAA,QAHMuM,CAIP,GAAAxG,MAAAZ,SAAAnF,UAAA,OAJOuM,CAKRE,EAAA1G,MAAA1C,KAAArD,UAAAyM,UALQF,CAMNG,EAAA3G,MAAA1C,KAAArD,UAAA0M,YANMH,CAOLI,EAAA5G,MAAA1C,KAAArD,UAAA2M,aAPKJ,CAQNK,EAAA7G,MAAA1C,KAAArD,UAAA4M,YARML,CASLM,EAAA9G,MAAA1C,KAAArD,UAAA6M,aATKN,CAUN,EAAAzO,MAAAgP,yBAAA,CAAgC/G,MAAA1C,KAAArD,UAAhC,CAAuD,aAAvD,CAVMuM,CAWF,EAAAxG,MAAAhG,QAAAC,UAAA,aAXEuM,CAYL,EAAAzO,MAAAgP,yBAAA,CAAgC/G,MAAAhG,QAAAC,UAAhC;AAA0D,WAA1D,CAZKuM,CAaF3C,EAAA7D,MAAAhG,QAAAC,UAAA4J,aAbE2C,CAcFQ,EAAAhH,MAAAhG,QAAAC,UAAA+M,aAdER,CAeCS,EAAAjH,MAAAhG,QAAAC,UAAAgN,gBAfDT,CAgBAU,EAAAlH,MAAAhG,QAAAC,UAAAiN,eAhBAV,CAiBAW,EAAAnH,MAAAhG,QAAAC,UAAAkN,eAjBAX,CAkBGY,EAAApH,MAAAhG,QAAAC,UAAAmN,kBAlBHZ,CAmBO,EAAAxG,MAAAhG,QAAAC,UAAA,sBAnBPuM,CAoBP,EAAAxG,MAAAhG,QAAAC,UAAA,QApBOuM,CAqBR,EAAAxG,MAAAhG,QAAAC,UAAA,OArBQuM,CAsBR,EAAAxG,MAAAhG,QAAAC,UAAA,OAtBQuM,CAuBT,EAAAxG,MAAAhG,QAAAC,UAAA,MAvBSuM,CAwBH,EAAAxG,MAAAhG,QAAAC,UAAA,YAxBGuM,CAyBR,EAAAxG,MAAAhG,QAAAC,UAAA,OAzBQuM;AA0BX/L,GAAAuF,MAAAvF,YA1BW+L,CA2BD,EAAAzO,MAAAgP,yBAAA,CAAgC/G,MAAAvF,YAAAR,UAAhC,CAA8D,WAA9D,CA3BCuM,CA4BW,EAAAxG,MAAAvF,YAAAR,UAAA,sBA5BXuM,CCQ1BjG,EAAe,IAFf8G,QAAA,EAAA,EDN0Bb,CEiBpBc,EAAsBtH,MAAA,eAE5B,IAAKsH,CAAAA,CAAL,EACKA,CAAA,cADL,EAE8C,UAF9C,EAEM,MAAOA,EAAA,OAFb,EAG2C,UAH3C,EAGM,MAAOA,EAAA,IAHb,CAKQ3P,CAaN,CAbkB,IAAIyK,CAatB,CAXArC,EAAA,CAAiBpI,CAAjB,CAWA,CAVAwH,CAAA,CAAcxH,CAAd,CAUA,CATA6F,CAAA,CAAU7F,CAAV,CASA,CARAD,CAAA,CAAaC,CAAb,CAQA,CALAiD,QAAAxB,iBAKA,CAL4B,CAAA,CAK5B,CAFMmO,CAEN,CAFuB,IAAI/G,CAAJ,CAA0B7I,CAA1B,CAEvB,CAAAI,MAAAC,eAAA,CAAsBgI,MAAtB,CAA8B,gBAA9B,CAAgD,CAC9C9H,aAAc,CAAA,CADgC,CAE9CD,WAAY,CAAA,CAFkC,CAG9CiM,MAAOqD,CAHuC,CAAhD,CftCW,CAAZ,CAAA","file":"webcomponents-ce.js","sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\n/*\n * Polyfills loaded: HTML Imports\n * Used in: Safari Tech Preview\n */\n\nimport '../bower_components/custom-elements/src/custom-elements.js'\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    this._unflushedLocalNames.push(localName);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n\n    this._flushPending = false;\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._unflushedLocalNames.length > 0) {\n      const localName = this._unflushedLocalNames.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      this.upgradeElement(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n"]}